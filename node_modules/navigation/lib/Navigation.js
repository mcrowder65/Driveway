var StateContext = require('./StateContext');
var StateController = require('./StateController');
var Dialog = require('./config/Dialog');
var State = require('./config/State');
var Transition = require('./config/Transition');
var StateInfoConfig = require('./config/StateInfoConfig');
var HistoryNavigator = require('./history/HistoryNavigator');
var HashHistoryManager = require('./history/HashHistoryManager');
var HTML5HistoryManager = require('./history/HTML5HistoryManager');
var CrumbTrailPersister = require('./CrumbTrailPersister');
var StorageCrumbTrailPersister = require('./StorageCrumbTrailPersister');
var Crumb = require('./Crumb');
var StateHandler = require('./StateHandler');
var StateRouter = require('./StateRouter');
var NavigationSettings = require('./NavigationSettings');
var Route = require('./routing/Route');
var Router = require('./routing/Router');
var settings = require('./settings');
var Navigation = (function () {
    function Navigation() {
    }
    Navigation.Dialog = Dialog;
    Navigation.State = State;
    Navigation.Transition = Transition;
    Navigation.StateInfoConfig = StateInfoConfig;
    Navigation.HashHistoryManager = HashHistoryManager;
    Navigation.HTML5HistoryManager = HTML5HistoryManager;
    Navigation.CrumbTrailPersister = CrumbTrailPersister;
    Navigation.StorageCrumbTrailPersister = StorageCrumbTrailPersister;
    Navigation.Crumb = Crumb;
    Navigation.NavigationSettings = NavigationSettings;
    Navigation.StateContext = StateContext;
    Navigation.StateController = StateController;
    Navigation.StateHandler = StateHandler;
    Navigation.StateRouter = StateRouter;
    Navigation.Route = Route;
    Navigation.Router = Router;
    Navigation.settings = settings;
    Navigation.start = function (url) {
        settings.historyManager.init();
        StateController.navigateLink(url ? url : settings.historyManager.getCurrentUrl());
    };
    return Navigation;
})();
HistoryNavigator.navigateHistory = function () {
    if (StateContext.url === settings.historyManager.getCurrentUrl())
        return;
    StateController.navigateLink(settings.historyManager.getCurrentUrl(), true);
};
module.exports = Navigation;
